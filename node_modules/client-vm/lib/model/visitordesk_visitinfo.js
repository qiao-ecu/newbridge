function visitinfoLoader(e,t,i,n){log.info("Loading data %s %s",e,t),visitorDesk.on(consts.EVENT_ACTION_PREFIX+"select",function(i){bidGetInfo=i.id||i.options.bid;var n=i.id||i.options.bid,o={bid:n,map:dynamicViewMapFunction};visitorDesk.createDynamicView(t,"tips",o),dataFactory().send(consts.COMMAND_DATACHANNEL_SYNC_START,{viewName:e,subViewName:t,data:[n]})});var o=t,s=function(e,t,i){if(o==e)if(visitorDesk.get(t.id,"rooms")){var n={name:visitorDesk.name,type:"update",mode:"external"};n.subViewName=e,n.dynamicViewName="tips";var s=visitorDesk.getVisitor(t.id),r=deepExtend({},s||{});r=deepExtend(t,r),n.value=[r],visitorDesk.emit("data",n)}};visitorDesk.on(consts.EVENT_VIEWMODEL_SYNC_INSERT,s),visitorDesk.on(consts.EVENT_VIEWMODEL_SYNC_UPDATE,s),log.info("Start to listen %s on %s.",consts.EVENT_VIEWMODEL_SYNC_UPDATE,o),visitorDesk.on("data",function(e){if(!(e.mode&&"external"==e.mode||e.name!=visitorDesk.name||e.subViewName!=consts.MAPPING.CHATTING.type||"insert"!=e.type&&"update"!=e.type))e.value.forEach(function(i){if(visitorDesk.get(i.id,t))ViewModelClass.createOrUpdate(visitorDesk,t,{id:i.id,updatedBy_:"onsite visitor "+e.type})})}),log.info("Start to listen visitor-desk onsite visitors.")}var Emitter=require("events").EventEmitter,inherits=require("util").inherits,Q=require("q"),DB=require("nedb"),path=require("path"),deepExtend=require("deep-extend"),ViewModelClass=require("../ViewModel"),dataFactory=require("../DataChannel"),blinkFactory=require("../BlinkChannel"),consts=require("../utils/const"),extend=require("../utils/extend"),fastGet=require("../utils/pulldata").fastGet,log=require("../utils/log")("visitinfo"),visitorDesk=require("./visitordesk")();visitorDesk.tips_loader=function(e,t,i,n,o){bidGetInfo=t.name;var s=t.name,r=this.get(s,e.name);if(!r)o.resolve([]),setTimeout(function(){dataFactory().send(consts.COMMAND_DATACHANNEL_SYNC_START,{viewName:visitorDesk.name,subViewName:e.name,data:[s]})},200);else o.resolve([r])};var dynamicViewMapFunction=function(e){if(!e.traceInfo||!e.tipsInfo)return void log.error("Return null for bad structure, miss traceInfo and tipsInfo. %s",JSON.stringify(e));else return e},bidGetInfo;module.exports=function(e){return log.info("Starting to create sub-view and dynamic-view on %s.",visitorDesk.name),visitorDesk.createSubView("visitinfo",visitinfoLoader),setInterval(function(){if(bidGetInfo)dataFactory().send(consts.COMMAND_DATACHANNEL_SYNC_START,{viewName:"vm:visitor",subViewName:"visitinfo",data:[bidGetInfo]})},2e3),null};