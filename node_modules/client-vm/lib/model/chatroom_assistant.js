var Emitter=require("events").EventEmitter,inherits=require("util").inherits,Q=require("q"),DB=require("nedb"),path=require("path"),deepExtend=require("deep-extend"),ViewModelClass=require("../ViewModel"),blinkFactory=require("../BlinkChannel"),dataFactory=require("../DataChannel"),consts=require("../utils/const"),extend=require("../utils/extend"),curry=require("../utils/curry"),fastGet=require("../utils/pulldata").fastGet,log=require("../utils/log")("chatroomassistant"),chatroom=require("./chatroom")(),visitorDesk=require("./visitordesk")(),welcomeLoader=function(e,t,n,i){chatroom.on(consts.EVENT_CHATROOM_ANEW_CHAT,function(e,n){printHistorySplitMessage(e).then(function(){var e=visitorDesk.get(n.name),i=blinkFactory().getCurrentLoginUser(),o=chatroom.get(i.id,t)||{dataList:[]};if(o.dataList.length<1)return void log.info("No found any persional auto reply settings for %s.",i.id);var s=null;if(o.dataList.forEach(function(t){var n=JSON.parse(t.welcomeWords);if(t.siteId==e.siteId&&n.isActive)return void(s=n.content);else return void 0}),!s)return void log.info("No found welcome words in persional auto reply settings for %s %s %s.",i.id,e.siteId,e.id);else return void chatroom.assistantDb.findOne({id:e.id},function(t,o){if(o)log.info("Do not send welcome words for too frequency %s",JSON.stringify(e));else{var r={bid:e.id,content:s};log.info("Send welcome words for %s %s %s",i.id,e.siteId,JSON.stringify(r)),chatroom._handleSendMsg(n.subViewName,n.uiName,"",r);var a=deepExtend({},e);a.assistantDbTime=Date.now(),chatroom.assistantDb.update({id:a.id},a,{upsert:!0})}})})}),log.info("Start listening chat room created event.");var o=chatroom.config.webip,s="http://%s/autoReply/personalAutoReplyInfoList.action",r=fastGet(s,o,{reqParam:{notneed:"notneed"}},chatroom.config);r.then(function(e){var t=blinkFactory().getCurrentLoginUser();e.id=t.id,ViewModelClass.save(chatroom,n,e)}),log.warn("Do not apply change on this version, maybe feature.")},printHistorySplitMessage=function(e){var t=Q.defer(),n={};n.id=Date.now(),n.from=0,n.bid=e.name,n.name="",n.type=consts.MESSAGE_TYPE.sysMessage;var i=Date.now();n.timestamp=i.toString();var o=require("./system_settings")(),s=o.getMessage(99,!0);if(s)n.content=s.message;else n.content=consts.MSG.E9001.message;return log.info("Push history message split message %s",JSON.stringify(n)),ViewModelClass.createOrUpdate(chatroom,e.subViewName,n),t.resolve(n),t.promise},chatOverHandler=function(){blinkFactory().on(consts.EVENT_BLINKCHANNEL_VISITOR_CHATOVER,function(e){log.info("Send visitor chatover message "+JSON.stringify(e));var t=e.id,n=visitorDesk.get(t);if(!n)n=visitorDesk.getByIndex("sessionId",e.sessionId,consts.MAPPING.CHATTING.type),t=n?n.id:"unkown bid",log.error("Can not send a chatover message for %s",JSON.stringify(e));else{var i=visitorDesk.getVisitorInView(t);if(i.name!==consts.MAPPING.CHATTING.name)return void log.info("Do not do chat-over logic on %s because support blink's bad design.",JSON.stringify(n))}var o=require("./system_settings")(),s=Date.now(),r={messageId:s,bid:t,userType:"service",userName:"",messageDetail:o.getMessage(142).message,occurTime:s,messageType:consts.MESSAGE_TYPE.sysMessage};log.warn("Send bye words %s for %s",JSON.stringify(r),n);var a=consts.UTILS_MESSAGESTYLE_WEB_TO_CLIENT(r);log.info("Record chat over message into talking table %s.",a),ViewModelClass.createOrUpdate(chatroom,consts.MAPPING.TALKING.type,a),chatroom.assistantDb.remove({id:t})}),visitorDesk.on(consts.EVENT_ACTION_PREFIX+"block",function(e){var t=e.id||e.options.bid,n=visitorDesk.getVisitorInView(t);if(n.name==consts.MAPPING.CHATTING.name)blinkFactory().closeChat(t)})};module.exports=function(e){var t=consts.UTILS_DATA_DIR();chatroom.assistantDb=new DB({filename:path.join(t,"/chatroom-assistant.db"),autoload:!0});var n=e.assistantWelcomeInterval||6e4;return setInterval(function(){chatroom.assistantDb.find({},function(e,t){t.forEach(function(e){if(e.assistantDbTime<Date.now()-10*n)log.info("Remove %d for open welcome words sending.",e.id),chatroom.assistantDb.remove({id:e.id})})})},n),chatroom.createSubView("personalAutoReplyInfoList",welcomeLoader),chatOverHandler(),null};