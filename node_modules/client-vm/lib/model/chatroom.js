function Chatroom(e,n){var t=Array.prototype.slice.call(arguments,0);ViewModelClass.call(this,t),this.config=n}var Emitter=require("events").EventEmitter,inherits=require("util").inherits,Q=require("q"),cheerio=require("cheerio"),Exception=require("../Exception"),ViewModelClass=require("../ViewModel"),blinkFactory=require("../BlinkChannel"),dataFactory=require("../DataChannel"),consts=require("../utils/const"),extend=require("../utils/extend"),curry=require("../utils/curry"),netconnectivity=require("../utils/netconnectivity"),log=require("../utils/log")("chatroom");inherits(Chatroom,ViewModelClass),Chatroom.prototype._handleSendMsg=function(e,n,t,i){var o=Q.defer(),s=this._generateDynamicViewName(e,n,i),r=this.db[e].viewMap.get(s),a=i.content,c=this;if(!a)return o.reject(new Exception(consts.STATUS_ILLEGAL_ARGUMENT,"options.content",{})),o.promise;var l=blinkFactory();if(!netconnectivity.online)return o.reject(new Exception(consts.STATUS_ILLEGAL_NETWORK,"options.content",{})),o.promise;else return l.sendMessage(r.name,a).then(function(e){c.emit(consts.EVENT_BLINKCHANNEL_MESSAGE_SEND,{id:e.id,status:0})},function(e){log.info("Fail to send message %s",JSON.stringify(e)),c.emit(consts.EVENT_BLINKCHANNEL_MESSAGE_SEND_FAILED,e)}),o.resolve({}),o.promise},Chatroom.prototype._handleTemporarySave=function(e,n,t,i){var o={id:i.bid,content:i.content,bid:i.bid,timestamp:i.bid};log.info("Cache %s into %s",JSON.stringify(o),e),ViewModelClass.createOrUpdate(this,e,o)},Chatroom.prototype._handleImageNotify=function(e,n,t,i){var o=this;this.emit(consts.EVENT_BLINKCHANNEL_MESSAGE_IMAGE,i,function(e,n){var t=n.bcsName,i=n.status,s=!1;o.all(e.name).forEach(function(n){if(!s){var r=n[0],a=n[1],c=cheerio.load(a.content);c("img[data-bcsname="+t+"]").is(function(n){s=!0;var t=cheerio(this);if(0===i)t.attr("data-uploaded","1");else if(1==i)t.attr("data-uploaded","2");var a=c.html();ViewModelClass.createOrUpdate(o,e.name,{id:r,content:a})})}})})},Chatroom.prototype._filterSubViewData=function(e,n,t,i,o){var s=Q.defer(),r=[],a=consts.ACTION_INTERNAL_LOADER,c=consts.UTILS_URL_MAPPING.nameActionPair.get(n.uiName);if(c&&c[a]){var l=c[a];this[l](e,n,t,i,s)}else n.data.forEach(function(n,t){r.push(e.get(n))}),s.resolve(r);return s.promise};var fireEvent=function(e,n,t,i,o,s){var r={name:e.name,subViewName:n,dynamicViewName:t,type:o,mode:s};r.value=[i],e.emit("data",r)},takingLoader=function(e,n,t,i){blinkFactory().on(consts.EVENT_BLINKCHANNEL_MESSAGE_RECV,function(e){ViewModelClass.save(singletonChatroom,t,e)}),blinkFactory().on(consts.EVENT_BLINKCHANNEL_MESSAGE_PARSETHROUGH,function(e){fireEvent(singletonChatroom,n,e.bid,e,"insert","external")}),blinkFactory().on(consts.EVENT_BLINKCHANNEL_MESSAGE_SEND_DRAFT,function(e){ViewModelClass.save(singletonChatroom,t,e)}),singletonChatroom.on(consts.EVENT_BLINKCHANNEL_MESSAGE_IMAGE,function(e,n){if(n(t,e),e.bid)blinkFactory().sendImageNotify(e.bid,JSON.stringify(e)).then(function(n){log.info("Success to send image notify message %s",JSON.stringify(e))},function(n){log.error("Fail to send image notify message %s %s",JSON.stringify(e),JSON.stringify(n))})}),singletonChatroom.on(consts.EVENT_BLINKCHANNEL_MESSAGE_SEND,function(e){ViewModelClass.save(singletonChatroom,t,e)}),singletonChatroom.on(consts.EVENT_BLINKCHANNEL_MESSAGE_SEND_FAILED,function(e){var n=e.source,i=t.get(n.type);if(i)i.status=1,ViewModelClass.save(singletonChatroom,t,i);else log.error("Can not found failed message %s",JSON.stringify(e))}),log.info("Start listening message from blink for %s",n);var o=n,s=function(e,n,t){if(o==n){var i=t.bid;if(i){var s=singletonChatroom.db[n].viewMap.get(i);if(s)fireEvent(singletonChatroom,n,s.uiName,t,e);else log.error("Unknown message %s for %s, because dynamic view is not found",JSON.stringify(t),i)}else log.error('Uncomplete structure of %s, because not contains "bid" field.',JSON.stringify(t))}};singletonChatroom.on(consts.EVENT_VIEWMODEL_SYNC_INSERT,curry(s,"insert")),log.info("Start to listen %s on %s.",consts.EVENT_VIEWMODEL_SYNC_INSERT,n),singletonChatroom.on(consts.EVENT_VIEWMODEL_SYNC_UPDATE,curry(s,"update")),log.info("Start to listen %s on %s.",consts.EVENT_VIEWMODEL_SYNC_UPDATE,n)},typingLoader=function(e,n,t,i){singletonChatroom.on(consts.EVENT_BLINKCHANNEL_MESSAGE_IMAGE,function(e,n){n(t,e)})};Chatroom.prototype.dynamicViewCreator=function(e,n,t){var i={bid:t.id,filter:{bid:t.id},orderby:"timestamp"},o=singletonChatroom.createDynamicView(e,n,i);return o};var singletonChatroom,singletonVisitorDesk;module.exports=function(e){if(singletonChatroom)return singletonChatroom;else return singletonChatroom=new Chatroom("vm:chatroom",e||{}),log.info("Created a chatroom view model instance with %s, and keep it only one.",JSON.stringify(e)),log.info("Starting to create sub-view and dynamic-view on %s.",singletonChatroom.name),singletonChatroom.createSubView("talking",takingLoader),singletonChatroom.createSubView("typing",typingLoader),blinkFactory().on(consts.EVENT_BLINKCHANNEL_MESSAGE_IMAGE,function(e){singletonChatroom._handleImageNotify(null,null,null,e)}),singletonVisitorDesk=require("./visitordesk")(e),singletonVisitorDesk.on("data",function(e){if(e.name==singletonVisitorDesk.name&&(!e.mode||"external"!=e.mode))e.value.forEach(function(n){var t=singletonChatroom.dynamicViewCreator("talking","talking",n),i=singletonChatroom.dynamicViewCreator("typing","typing",n);if("insert"==e.type&&e.dynamicViewName==consts.MAPPING.CHATTING.name)setTimeout(function(){singletonChatroom.emit(consts.EVENT_CHATROOM_ANEW_CHAT,t,i)},0)})}),singletonChatroom};