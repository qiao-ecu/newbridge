function DataChannel(n,e,t){Emitter.call(this),this.config=t,this.clientId=n,this.token=e,this.socket=null,this.sendBuffer=[]}function messageHandler(n,e){var t=JSON.parse(e.data),i=t.data,o=t.idData,s=[];if(i.forEach(function(n,t){if(null!==n&&""!==n&&""!==n)try{var i=JSON.parse(n);if("0"==i.status&&i.data)i=i.data;i.id=o[t],i.__id=o[t],s.push(i)}catch(r){log.error("Error occurred when try to parse incoming message. %s",e.data)}}),log.info("Receive message %s over data channl.",JSON.stringify(s)),s.length>0)n.emit(t.viewName+":"+t.subViewName,s)}var Emitter=require("events").EventEmitter,inherits=require("util").inherits,WebSocket=require("websocket").w3cwebsocket,Exception=require("./Exception"),consts=require("./utils/const"),extend=require("./utils/extend"),curry=require("./utils/curry"),netconnectivity=require("./utils/netconnectivity"),log=require("./utils/log")("DataChannel");inherits(DataChannel,Emitter),DataChannel.prototype.init=function(){var n=this;return this.reconnectTimes=0,new Promise(function(e,t){n._reconnect(e,t)})},DataChannel.prototype._reconnect=function(n,e){var t=this;if(t.socket&&1==t.socket.readyState)return log.info("Do nothing when data-channel is connected"),void n();var i=this.config.webip||[],o=[];i.forEach(function(n){var e=n.split(",");o.push(e[0]+":"+e[1])}),log.info("Starting build data channel on websocket %s.",JSON.stringify(o));var s=this.reconnectTimes%o.length;t.socket=new WebSocket("ws://"+o[s]+"/ws?token="+this.token+"&clientId="+this.clientId),t.socket.onmessage=curry(messageHandler,this),log.info("Try to build channel on websocket %s",t.socket.url);var r=t.config.DataChannel_keepalive_interval,c=null;return t.socket.onopen=function(){log.info("Connect sucessfully onto %s",t.socket.url),c=setInterval(function(){try{t.send(consts.COMMAND_DATACHANNEL_SYNC_PING,{token:t.token}),log.info("Have send a ping message to server %s with %d",t.socket.url,r)}catch(n){log.warn("Fail to send a ping message to server %s with %d",t.socket.url,r)}},r),n()},t.socket.onerror=function(n){log.warn("Fail to connect %s because %s",t.socket.url,n)},t.socket.onclose=function(i){clearInterval(c);var s=t.reconnectTimes-t.config.DataChannel_reconnect_times;if(0>s&&i.code===t.config.DataChannel_reconnect_code)return t.reconnectTimes++,setTimeout(t._reconnect.bind(t,n,e),t.config.DataChannel_reconnect_interval),void log.info("We will do reconnect at %d(left %d)",t.reconnectTimes,s);else return log.error("Give up to connect onto websocket %s",o),e(new Exception(consts.MSG.E1003.code,consts.MSG.E1003.message,i)),void t.emit(consts.EVENT_DATACHANNEL_CONNECT_FAILED)},t.socket},DataChannel.prototype.send=function(n,e){var t={};t.id=Date.now(),t.token=this.token,t.clientId=this.clientId,t.data=e,t.type=n;var i=JSON.stringify(t);if(log.info("Send message %s over data channel.",i),this.socket&&1==this.socket.readyState&&netconnectivity.online){if(this.sendBuffer.length){var o=this.sendBuffer.shift();do this.socket.send(o),o=this.sendBuffer.shift();while(o)}this.socket.send(i)}else log.warn("TODO: re-send is not in-time..Push send data into buffer because data channel is broken. %s",i),this.sendBuffer.push(i)};var singtonDataChannel;module.exports=function(n,e,t){if(!singtonDataChannel){if(!n||!e||!t)throw new Error("Must create DataChannel object first.");singtonDataChannel=new DataChannel(n,e,t),singtonDataChannel.on(consts.EVENT_DATACHANNEL_CONNECT_FAILED,function(){log.info("Data channel connection failed, start init again."),setTimeout(function(){singtonDataChannel.init().then(function(){log.info("Reconnect successfully after connect failed.")},function(){log.info("Reconnect failed even after connect failed.")})},t.DataChannel_reconnect_interval)}),log.info("A new data channel instance has created, and we will keep it only one.")}return singtonDataChannel};