/**
 * @file 日志
 * @author cxl(chenxinle@baidu.com)
 */

var path = require('path');
var fs = require('fs');
var mkdirp = require('mkdirp');
var winston = require('winston');
var Logger = winston.Logger;
var DailyRotateFile = winston.transports.DailyRotateFile;

/**
 * 数字补齐2位
 *
 * @param {number} n 数字
 * @return {string}
 */
function pad(n) {
    return (n >= 10 ? '' : '0') + n;
}

/**
 * 日期格式化
 *
 * @param {Object} time 日期时间对象
 * @return {string}
 */
function timeFormat(time) {
    return time.getFullYear()
        + '-'
        + pad(time.getMonth() + 1)
        + '-'
        + pad(time.getDate())
        + ' '
        + pad(time.getHours())
        + ':'
        + pad(time.getMinutes())
        + ':'
        + pad(time.getSeconds())
        + ':'
        + pad(time.getMilliseconds());
}

/**
 * 日志
 *
 * @public
 * @param {string} dir 日志目录
 * @param {boolean} debug 启动debug模式
 * @return {Object}
 */
module.exports = function (dir, debug) {
    dir = path.resolve(process.cwd(), dir);

    if (!fs.existsSync(dir)) {
        mkdirp.sync(dir);
    }

    var transport = new DailyRotateFile({
        level: debug ? 'debug' : 'info',
        filename: path.resolve(dir, 'core.log'),
        datePattern: '.yyyy-MM-dd',
        stringify: function (options) {
            var res = {
                level: options.level,
                time: timeFormat(new Date(options.timestamp)),
                message: options.message
            };

            for (var key in options) {
                if (!(key in res)) {
                    res[key] = options[key];
                }
            }

            return JSON.stringify(res);
        }
    });

    return new Logger({
        transports: [transport]
    });
};
