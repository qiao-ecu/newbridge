package cg;

// auth type
enum AuthType {
    LOCAL = 0;	//LOCAL
    UC = 1;		//UC
    PAST = 2;	//PASSPORT
    UUAP = 3;	//UUAP
    BRG = 4;		//NEW BRIDGE
    DUZHAN = 5;  //DU ZHAN
}

// user id + auth type
message User {
    required string id = 1;
    required AuthType authtype = 2;
}

message Visitor {
    enum Status {
        ENTER    = 0;       // browsing site
        ROUTING  = 1;       // click to comm
        QUEUEING = 2;       // waiting csr to accept
        ALERTING = 3;       // be invite by csr
        TALKING  = 4;       // communicating
        LEAVE    = 5;       // leave site && end talk
    }

    enum Device {
        DEV_PC     = 0;
        DEV_MOBILE = 1;
    }

    message Loginnode {
        required Device   device    = 1 [default=DEV_PC]; // login device
        required Status   status    = 2 [default=LEAVE];  // status now
        required sfixed32 reason    = 3 [default=0];      // status reason code
        required fixed64  entertime = 4 [default=0];      // login time on device
        required fixed32  enterip   = 5 [default=0];      // enter ip address
        required sfixed64 uuid      = 6 [default=-1];     // webproxy id on bus
        required sfixed64 loginid   = 7 [default=-1];     // loginid on proxy
        optional fixed64  timestamp = 8 [default=0];      // status time on device
    }

    required User user = 1;
    required fixed32   notifytype = 2 [default=0];     // 0-site, 1-list
    required string     sid       = 3 [default="-1"];  // current session id
    optional string     checkinfo = 4 [default=""];    // 第三方鉴权所需字段
    required Loginnode logininfo  = 5;                 // login info
}

message Csr {
    enum Status {
        READY   = 0;
        BUSY    = 1;
        LEAVE   = 2;
        UNLOGIN = 3;
    };

    enum Device {
        DEV_PC     = 0;
        DEV_MOBILE = 1;
    };

    message Loginnode {
        required Device   device    = 1 [default=DEV_PC];   // login device
        required Status   status    = 2 [default=UNLOGIN];  // status now
        required sfixed32 reason    = 3 [default=0];        // status reason code
        required fixed64  logintime = 4 [default=0];        // login time on device
        required sfixed64 uuid      = 5 [default=-1];       // proxy id on bus
        required sfixed64 loginid   = 6 [default=-1];       // loginid on proxy
    }

    message Runtime {
        required sfixed32 totalvstduration  = 1 [default=0];   // how long talk already from last login
        required sfixed32 totalduration     = 2 [default=0];   // how long talk already(vst+csr) from last login
        required sfixed32 totalvstcount     = 3 [default=0];   // total vst comm count from last login
        required sfixed32 totalcount        = 4 [default=0];   // total comm count(vst+csr) from last login
        required sfixed32 curvstcount       = 5 [default=0];   // total vst comm count current
        required sfixed32 curcount          = 6 [default=0];   // total comm count(vst+csr) current
        required sfixed32 lastvstfinishtm   = 7 [default=-1];  // last finish vst comm timestamp
        required sfixed32 lastcsrfinishtm   = 8 [default=-1];  // last finish csr comm timestamp
        repeated string    sessions         = 9;               // all sessions
        required sfixed32 curquecount       = 10 [default=0];
        required fixed64  lastheartbeat     = 11 [default=0]; // last heartbeat timestamp
    }

    required User      user = 1;
    required string     nickname  = 2 [default=""];  // nickname
    required fixed32   eid        = 3 [default=0];   // business id
    required string     gid       = 4 [default=""];  // group id
    required fixed32   siteid     = 5 [default=0];   // site id
    required fixed32   authtype   = 6 [default=0];   // 鉴权类型，0-本地，1-UC
    required fixed32   notifytype = 7 [default=0];   // 0-site, 1-list
    optional string     checkinfo = 8 [default=""];  // 第三方鉴权所需字段
    required Runtime   runtime    = 9;               // runtime info
    repeated Loginnode logininfo  = 10;              // a login from one csr
}

