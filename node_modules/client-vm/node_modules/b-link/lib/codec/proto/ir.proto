
package ir;

message MsgBody
{
    enum PushType
    {
        PUSH_ONE_NATIVE = 1;  // Push
        PUSH_ONE_LIGHT  = 2;  // LightApp
    }

    enum MediaType
    {
        HTML  = 0;
        FILE  = 1;
        VOICE = 2;
        VIDEO = 3;
        OTHER = 4;
    }

    enum AuthType
    {
        LOCAL  = 0;  // LOCAL
        UC     = 1;  // UC
        PAST   = 2;  // PASSPORT
        UUAP   = 3;  // UUAP
        BRG    = 4;  // 新商桥
        DUZHAN = 5;  // 度站
    }

    // for push
    enum DeviceType
    {
        DEV_BROWSER  = 1;
        DEV_PC       = 2;
        DEV_ANDROID  = 3;
        DEV_IOS      = 4;
        DEV_WINPHONE = 5;
    }

    message LightAppInfo
    {
        required bytes accesstoken = 1;  // token
        required bytes title       = 2;  // 消息主题
        required bytes intro       = 3;  // 消息简述
        required bytes url         = 4;  // 消息链接
    }

    message Device
    {
        // for Push
        optional DeviceType type       = 1;  // 设备类型
        optional bytes      mid        = 2;  // 用户标识，在Android里，mchannelid + mid指定某一个特定用户，不超过256字节，如果存在此字段，则只推送给此用户
        optional bytes      mchannelid = 3;  // 通道标识
        // for LightApp
        optional bytes      pushtoken  = 4;  // token
    }

    message Receiver
    {
        required fixed64  siteid   = 1;  // 站点id
        required bytes    userid   = 2;  // 用户id
        required AuthType authtype = 3;  // 用户鉴权类型
        repeated Device   devices  = 4;  // 设备类型
    }

    required fixed64      id        = 1;  // 该条消息的唯一标示
    required PushType     pushtype  = 2;  // 推送类型
    optional LightAppInfo info      = 3;  // 推送类型为轻应用时，使用该参数
    required MediaType    type      = 4;  // 消息类型
    required bytes        content   = 5;  // 消息内容
    required fixed32      eid       = 6;  // 企业id
    required bytes        ename     = 7;  // 企业名称
    required fixed64      timestamp = 8;  // 消息时间戳，打包时指定
    repeated Receiver     receivers = 9;  // 消息接受者信息
}

message MsgBodyAck
{
    required fixed64 id        = 1;  // 等于对应的MsgBody的id字段
    required fixed64 result    = 2;  // 消息处理结果，0：成功，非0,：失败
    optional bytes   failinfo  = 3;  // 当result不为0时，失败原因
    required fixed64 timestamp = 4;  // 消息时间戳，打包时指定
}

