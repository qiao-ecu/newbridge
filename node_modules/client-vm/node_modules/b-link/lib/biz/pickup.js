/**
 * @file 接起排队中方可
 * @author mengran(mengran@baidu.com)
 */

var CONST = require('../const');
var getUserInfo = require('../util/getUserInfo');
var AckError = require('./AckError');
var Long = require('long');
var curry = require('../util/curry');

/**
 * response
 *
 * @param {Object} res Response object
 */
function pickResponseHandler(core, resolve, reject, id, res) {
    var contacts = {
        id: id,
        status: CONST.V_STATUS.TALKING
    };

    if (this._searchContacts(contacts.id).node) {
        contacts = this._updateContacts(contacts.id, 
            {status: contacts.status});
    }
    this.emit('chat', contacts);
    resolve(contacts);
}

/**
 * 接起排队中方可协议处理
 *
 * @public
 * @param {Object} core 沟通内核
 * @param {String} id 访客ID
 * @return {Promise}
 */
module.exports = function (core, id) {
    var config = core._config;
    var contacts = core._getContacts(id);

    if (!contacts) {
        var error = new AckError('pickup', {result: id});
        return Promise.reject(error);
    }

    var currentUser = core._getUserInfo();
    var data = {
        from: currentUser,
        fromtype: config.role,
        to: getUserInfo(contacts),
        totype: contacts.type,
        siteid: contacts.siteId,
        sessionid: contacts.sessionId,
        eid: config.eid,
        content: [],
        sinfo: JSON.stringify(currentUser)
    };

    return new Promise(function (resolve, reject) {
        core._attachMsg(
            CONST.MSG.RESPONSE,
            CONST.CMD.ACCEPT,
            curry(pickResponseHandler, core, resolve, reject, id),
            true    // Once
        );
        core._send(CONST.MSG.REQUEST, CONST.CMD.ACCEPT, data);
    });
};
