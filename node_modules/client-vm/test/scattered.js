/**
 * @file extend test file
 * @author mengran(mengran@baidu.com)
 */

var extend = require('../lib/utils/extend');
var assert = require('assert');
var FastMap = require("collections/fast-map");
var os = require('os');
var moment = require('moment');

describe('Extend', function() {
    it('should have property [forMochaTest]', function() {
        var t = extend({}, {
            'forMochaTest': true
        });
        assert.equal(true, t.forMochaTest);
    });
});

describe('FastMap', function() {
   it('fast map put method', function() {
       var map = new FastMap();
       map.set('1', '2');
       map.set(0, '2');
       map.set(1, 0);
       assert.equal(3, map.length);
   });
});

describe('HomeDir', function() {
    it('get home dir on platform', function() {
        var homedir = (process.platform === 'win32') ? process.env.HOMEPATH : process.env.HOME;
        if (os.platform() == 'darwin') {
            var arrays = homedir.split('/');
            assert.equal('Users', arrays[1]);
            // assert.equal('baidu', arrays[2]);
        }
    });
});

describe('fastGet', function() {
    it('fastGet message is work', function(done) {
        var fastGet = require('../lib/utils/pulldata').fastGet;
        var netconnectivity = require('../lib/utils/netconnectivity');
        netconnectivity.online = true;
        fastGet('http://%s/v2/5651589e110000bb109e10bd', ['1111', 'www.mocky.io'], {a: 'b'}, {
            syncRequestTimeout: 10000
        })
            .then(
                function(data) {
                    done();
                    assert.equal(data.fastGet, 100);
                },
                function(err) {
                    done();
                    assert.equal(-1, 100);
                }
            );
    });
});

describe('userdir', function() {
   it('user file dir identity', function() {
       assert.equal('123:23'.replace(/:/, '_'), '123_23');
       assert.equal('12323'.replace(/:/, '_'), '12323');
   });
});

var cheerio = require('cheerio');
describe('cheerio', function() {
   it('image upload related.', function() {
       var html = "<div style=\"font-family: 宋体;font-size:14pt;font-weight:null;text-decoration:null;font-style:null\"><p style=\"font-family: 宋体; font-size: 14pt;\"><img src=\"../.././cache/13/14ef76-709b-4d1c-8dc7-a5c22ab243ab\" data-uploaded=\"2\" data-bcsname=\"1314ef76-709b-4d1c-8dc7-a5c22ab243ab\" id=\"1314ef76-709b-4d1c-8dc7-a5c22ab243ab\" style=\"resize: none;\"></p></div>";
       var dom = cheerio.load(html);
       
       var bcsName = '1314ef76-709b-4d1c-8dc7-a5c22ab243ab';
       var status = 0;
       dom('img[data-bcsname=' + bcsName + ']').is(function(element) {
            var img = cheerio(this);
            if (status === 0) {
                img.attr('data-uploaded', '1');
            } else if (status === 1) {
                img.attr('data-uploaded', '2');
            }
        });
        assert.equal(dom('img[data-bcsname=1314ef76-709b-4d1c-8dc7-a5c22ab243ab]').attr('data-uploaded'), '1');
   });
});

describe('moment', function() {
   it('5 days ago of 2015-12-15', function() {
       assert.equal('2015-12-10', moment('2015-12-15').subtract(5, 'days').format('YYYY-MM-DD'));
   });
});

describe('jsonParse', function() {
    it('\n is valid', function() {
        var msg = JSON.parse('{\"bcsName\":\"e34ec2a3-488a-4b53-8be8-932999675683\",\"status\":0,\"type\":\"img\"}\n');
        assert.equal('img', msg.type);
    });
});