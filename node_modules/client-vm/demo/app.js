var portBufer =new Buffer([0,0,33,82]);console.log(portBufer.toString()),console.log(portBufer);var timeObject=new Date;console.log(timeObject),timeObject=new Date(timeObject.getTime()+1e4),console.log(timeObject),console.log(+new Date);var endpoint=require("../index")();endpoint.on("error",function(t){console.log("Runtime excpetion.")});var init=function(){endpoint.data("vm:visitor","onsite","visiting").then(function(t){console.log("fetch data of visiting "+JSON.stringify(t))},function(t){console.log(JSON.stringify(t))}),endpoint.data("vm:visitor","onsite","inviting").then(function(t){console.log("fetch data of inviting "+JSON.stringify(t))},function(t){console.log(JSON.stringify(t))}),endpoint.data("vm:visitor","onsite","chatting").then(function(t){console.log("fetch data of chatting "+JSON.stringify(t))},function(t){console.log(JSON.stringify(t))}),endpoint.data("vm:visitor","onsite","queueing").then(function(t){console.log("fetch data of queueing "+JSON.stringify(t))},function(t){console.log(JSON.stringify(t))}),endpoint.data("vm:visitor","onsite","roboting").then(function(t){console.log("fetch data of roboting "+JSON.stringify(t))},function(t){console.log(JSON.stringify(t))}),endpoint.data("vm:visitor","recent","recent").then(function(t){console.log("fetch data of recent "+JSON.stringify(t))},function(t){console.log(JSON.stringify(t))}),endpoint.data("vm:visitor","left","left").then(function(t){console.log("fetch data of left "+JSON.stringify(t))},function(t){console.log(JSON.stringify(t))})},testcase={"tips\n":function(){endpoint.on("data",function(t){if(console.log("update notify "+JSON.stringify(t)),"visiting"==t.dynamicViewName){var n=t.value[0];console.log("A visitor visit~",n),endpoint.action("vm:visitor","onsite","visiting","select",n.id,{})}if("visitoinfo"==t.dynamicViewName)console.log("tips data push",t)})},visitors:[],currentVisitorIndex:0,"unread_change\n":function(){var t=0==testcase.currentVisitorIndex?1:0;endpoint.action("vm:visitor","onsite","chatting","select",testcase.visitors[t].id,{}),console.log("change to ",t),testcase.currentVisitorIndex=t},"unread\n":function(){endpoint.on("data",function(t){if(console.log("update notify "+JSON.stringify(t)),"chatting"==t.dynamicViewName&&"insert"==t.type)testcase.visitors.push(t.value[0]);if("chatting"==t.dynamicViewName&&"update"==t.type)console.log(t.value[0]),console.log(t.value[0].id+","+t.value[0].unread)});var t=!1,n=setInterval(function(){if(testcase.visitors.length<2)console.log("Ignore~");else{var e=testcase.currentVisitorIndex;endpoint.action("vm:visitor","onsite","chatting","select",testcase.visitors[e].id,{}),testcase.currentVisitorIndex=e,console.log("change to ",e),t=!0,clearInterval(n)}},1e4);setInterval(function(){if(!t)console.log("Ignore~");else{var n=0==testcase.currentVisitorIndex?1:0,e=testcase.currentVisitorIndex;endpoint.action("vm:chatroom","typing","typing","send","",{bid:testcase.visitors[e].id,content:"current"+(new Date).getTime()}),endpoint.action("vm:chatroom","typing","typing","send","",{bid:testcase.visitors[n].id,content:"unread"+(new Date).getTime()}),t=!0}},6e4)}};endpoint.init("zhanglizhi02:q","123456",{userAgent:"new bridge client-vm demo",macAddress:"hhahahahah",status:1}).then(function(){console.log("Connect OK..."),init(),console.log("Please select testcase:"),Object.getOwnPropertyNames(testcase).forEach(function(t){console.log(t)}),process.stdin.resume(),process.stdin.on("data",function(t){console.log("You select: "+t),testcase[t.toString()]()})},function(t){console.log("NG",JSON.stringify(t))});
