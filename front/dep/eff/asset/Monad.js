define(function(require){function e(){if(!(this instanceof e))return new e(data);else return void i.apply(this,arguments)}function t(t,n){if(!(n instanceof e))throw"param is not a monad";return n.mApply(t)}function n(e){var n=[].slice.call(arguments,0);n.shift();for(var i=0;i<n.length;i++)e=t(n[i],e);return e}var i=require("./Functor").Functor,r=require("./util");return e.prototype.mApply=function(e){throw"please implement mApply"},e.prototype.always=function(e){var t=e();if(!(t instanceof Either))throw"return is not a Either Monad";return t},r.inherit(e,i),{Monad:e,mApply:t,flow:n}});